What happens when you initialize a repository? Why do you need to do it?

   Fill in your answer here
   This creates a new repository in the required folder. Git creates .git folder to track all the meta information pertaining to the repository such as commit logs, history etc.

How is the staging area different from the working directory and the repository? What value do you think it offers?

   Fill in your answer here
   Working directory can consist of many files, once the repository is initialized, all the files in the working directory are tracked but only the added ones are ready to be committed.

How can you use the staging area to make sure you have one commit per logical change?

   Fill in your answer here
   I can specifically add only those changes that I would like to commit to the staging area and verify that configuration and commit it to the repository before commiting further changes. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

   Fill in your answer here
   If I have to make a major change which requires time for stabilizing, I can add it on a branch and then move it to the master branch once it is fully tested.

How do the diagrams help you visualize the branch structure?
  
   Fill in your answer here
   Diagrams clearly show the parent child relationship between commits and help us trace all the changes from the tip of a branch till the first commit. It also, helps us visualize the various branches that exist on the repository

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

   Fill in your answer here
   All the contents from the two branches are intelligently merged based on the common point from which the branches diverged. We represent it in the digaram the way we do for easy traceability of the changes done each branch.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

   Fill in your answer here
   Automatic merging can reduce manual effort when the changes done to code on different sections of code. However, if there are a lot of potential conflicts, it is better to do it manually, as automatic merging can cause a lot of issues.

